import os
import unittest

from DeltaDictionary import DeltaDictionary, SectorDictionary
from DeltaGalaxy import DeltaGalaxy
from HexMap import HexMap
from Tests.testBase import testBase


class testHexMap(testBase):
    def test_document_object(self):
        sourcefile = os.path.abspath('../DeltaFiles/no_subsectors_named/Zao Kfeng Ig Grilokh empty.sec')
        if not os.path.isfile(sourcefile):
            sourcefile = os.path.abspath('../Tests/DeltaFiles/no_subsectors_named/Zao Kfeng Ig Grilokh empty.sec')

        args = self._make_args()
        args.interestingline = None
        args.interestingtype = None
        args.maps = True
        args.subsectors = True

        delta = DeltaDictionary()
        sector = SectorDictionary.load_traveller_map_file(sourcefile)
        delta[sector.name] = sector

        galaxy = DeltaGalaxy(args.btn, args.max_jump, args.route_btn)
        galaxy.read_sectors(delta, args.pop_code, args.ru_calc)
        galaxy.output_path = args.output

        secname = 'Zao Kfeng Ig Grilokh'

        hexmap = HexMap(galaxy, 'trade')

        document = hexmap.document(galaxy.sectors[secname])
        self.assertEqual(4, document.margins.left, 'Unexpected margins value')
        # check writer properties
        self.assertTrue(hexmap.writer.session.compression, 'PDF writer compression not set')
        self.assertEqual('Sector Zao Kfeng Ig Grilokh (-2,4)', hexmap.writer.title)
        self.assertEqual('Trade route map generated by PyRoute for Traveller', hexmap.writer.subject)
        self.assertEqual('PyPDFLite', hexmap.writer.creator)
        self.assertEqual(
            os.path.abspath(args.output + '/Zao Kfeng Ig Grilokh Sector.pdf'),
            hexmap.writer.filepath
        )


if __name__ == '__main__':
    unittest.main()
